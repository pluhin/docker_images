name: Jenkins. Build and Push Image on Tag
on:
  push:
    tags:
      - 'jenkins*' # Matches tags like jenkins:v1.2.3
jobs:
  push_image:
    name: Push Jenkins image with tag
    runs-on: ubuntu-latest
    steps:

      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v4
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}

      - name: Extract tag version
        id: extract_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/jenkins=}" >> $GITHUB_ENV

      - name: Build Docker image
        id: build_docker
        run: |
          docker build -t testing/jenkins:${{ env.VERSION }} ./jenkins

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: 'testing/jenkins:${{ env.VERSION }}'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Push Docker image
        if: ${{ success() }}
        run: |
          docker tag testing/jenkins:${{ env.VERSION }} ghcr.io/pluhin/jenkins:${{ env.VERSION }}
          docker push ghcr.io/pluhin/jenkins:${{ env.VERSION }}

      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v3
        env:
          SLACK_CHANNEL: monitor
          SLACK_COLOR: ${{ job.status }}
          SLACK_MESSAGE: "Docker image is ready ghcr.io/pluhin/jenkins:${{ env.VERSION }}"
          SLACK_TITLE: Docker image build and publish status
          SLACK_USERNAME: GitHub
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
